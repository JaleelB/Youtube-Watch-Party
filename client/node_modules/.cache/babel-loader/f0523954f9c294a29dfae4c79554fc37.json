{"ast":null,"code":"const ACTIONS = {\n  CREATE_HOST_PARTICIPANT: 'create-host-participant',\n  CREATE_PARTICIPANT: 'create-participant',\n  // UPDATE_HOST_PARTICIPANT_LIST: 'update-host-participant-list',\n  UPDATE_PARTICIPANT_LIST: 'update-participant-list',\n  UPDATE_PARTICIPANT_VIDEO: 'update-participant-video',\n  CHANGE_HOST_PARTICIPANT: 'change-host-participant'\n};\nexport const ParticipantReducer = (state, action) => {\n  switch (action.type) {\n    case ACTIONS.CREATE_PARTICIPANT:\n      return {\n        name: action.payload.name,\n        host: false,\n        roomID: action.payload.roomID,\n        participantList: [],\n        currentVideoPlaying: ''\n      };\n\n    case ACTIONS.CREATE_HOST_PARTICIPANT:\n      return {\n        name: action.payload.name,\n        host: true,\n        roomID: action.payload.roomID,\n        participantList: [],\n        currentVideoPlaying: ''\n      };\n    // case ACTIONS.UPDATE_HOST_PARTICIPANT_LIST:\n    //     return {\n    //         ...state, \n    //         participantList: action.payload.participantList,\n    //         // currentVideoPlaying: action.payload.currentVideoPlaying  \n    //     }\n    // case ACTIONS.UPDATE_HOST_VIDEO:\n    //     return {\n    //         ...state, \n    //         // participantList: action.payload.participantList,\n    //         currentVideoPlaying: action.payload.currentVideoPlaying  \n    //     }\n\n    case ACTIONS.UPDATE_PARTICIPANT_LIST:\n      return { ...state,\n        participantList: action.payload.participantList // currentVideoPlaying: action.payload.currentVideoPlaying \n\n      };\n\n    case ACTIONS.UPDATE_PARTICIPANT_VIDEO:\n      return { ...state,\n        // participantList: action.payload.participantList,\n        currentVideoPlaying: action.payload.currentVideoPlaying\n      };\n\n    case ACTIONS.CHANGE_HOST_PARTICIPANT:\n      return { ...state,\n        host: action.payload.isHost\n      };\n\n    default:\n      return state;\n  }\n};\n_c = ParticipantReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ParticipantReducer\");","map":{"version":3,"names":["ACTIONS","CREATE_HOST_PARTICIPANT","CREATE_PARTICIPANT","UPDATE_PARTICIPANT_LIST","UPDATE_PARTICIPANT_VIDEO","CHANGE_HOST_PARTICIPANT","ParticipantReducer","state","action","type","name","payload","host","roomID","participantList","currentVideoPlaying","isHost"],"sources":["/Users/jaleelbennett/Documents/Projects/Block Watch - YT Watch Party/Youtube-Watch-Party/client/src/reducers/ParticipantReducer.js"],"sourcesContent":["const ACTIONS = {\n    CREATE_HOST_PARTICIPANT: 'create-host-participant',\n    CREATE_PARTICIPANT: 'create-participant',\n\n    // UPDATE_HOST_PARTICIPANT_LIST: 'update-host-participant-list',\n    UPDATE_PARTICIPANT_LIST: 'update-participant-list',\n    UPDATE_PARTICIPANT_VIDEO: 'update-participant-video',\n\n    CHANGE_HOST_PARTICIPANT: 'change-host-participant'\n\n    \n};\n\n\nexport const ParticipantReducer = (state, action) => {\n    \n    switch(action.type){\n        case ACTIONS.CREATE_PARTICIPANT:\n            return {\n                name: action.payload.name,\n                host: false,\n                roomID: action.payload.roomID,\n                participantList: [],\n                currentVideoPlaying: ''\n            };\n        case ACTIONS.CREATE_HOST_PARTICIPANT:\n            return {\n                name: action.payload.name,\n                host: true,\n                roomID: action.payload.roomID,\n                participantList: [],\n                currentVideoPlaying: ''\n            };\n        // case ACTIONS.UPDATE_HOST_PARTICIPANT_LIST:\n        //     return {\n        //         ...state, \n        //         participantList: action.payload.participantList,\n        //         // currentVideoPlaying: action.payload.currentVideoPlaying  \n        //     }\n        // case ACTIONS.UPDATE_HOST_VIDEO:\n        //     return {\n        //         ...state, \n        //         // participantList: action.payload.participantList,\n        //         currentVideoPlaying: action.payload.currentVideoPlaying  \n        //     }\n        case ACTIONS.UPDATE_PARTICIPANT_LIST:\n            return{\n                ...state,\n                participantList: action.payload.participantList,\n                // currentVideoPlaying: action.payload.currentVideoPlaying \n            }\n        case ACTIONS.UPDATE_PARTICIPANT_VIDEO:\n            return{\n                ...state,\n                // participantList: action.payload.participantList,\n                currentVideoPlaying: action.payload.currentVideoPlaying \n            }\n        case ACTIONS.CHANGE_HOST_PARTICIPANT:\n            return{\n                    ...state,\n                    host: action.payload.isHost\n            }\n        default: \n            return state;\n    }\n};\n\n\n\n\n"],"mappings":"AAAA,MAAMA,OAAO,GAAG;EACZC,uBAAuB,EAAE,yBADb;EAEZC,kBAAkB,EAAE,oBAFR;EAIZ;EACAC,uBAAuB,EAAE,yBALb;EAMZC,wBAAwB,EAAE,0BANd;EAQZC,uBAAuB,EAAE;AARb,CAAhB;AAcA,OAAO,MAAMC,kBAAkB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EAEjD,QAAOA,MAAM,CAACC,IAAd;IACI,KAAKT,OAAO,CAACE,kBAAb;MACI,OAAO;QACHQ,IAAI,EAAEF,MAAM,CAACG,OAAP,CAAeD,IADlB;QAEHE,IAAI,EAAE,KAFH;QAGHC,MAAM,EAAEL,MAAM,CAACG,OAAP,CAAeE,MAHpB;QAIHC,eAAe,EAAE,EAJd;QAKHC,mBAAmB,EAAE;MALlB,CAAP;;IAOJ,KAAKf,OAAO,CAACC,uBAAb;MACI,OAAO;QACHS,IAAI,EAAEF,MAAM,CAACG,OAAP,CAAeD,IADlB;QAEHE,IAAI,EAAE,IAFH;QAGHC,MAAM,EAAEL,MAAM,CAACG,OAAP,CAAeE,MAHpB;QAIHC,eAAe,EAAE,EAJd;QAKHC,mBAAmB,EAAE;MALlB,CAAP;IAOJ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IACA,KAAKf,OAAO,CAACG,uBAAb;MACI,OAAM,EACF,GAAGI,KADD;QAEFO,eAAe,EAAEN,MAAM,CAACG,OAAP,CAAeG,eAF9B,CAGF;;MAHE,CAAN;;IAKJ,KAAKd,OAAO,CAACI,wBAAb;MACI,OAAM,EACF,GAAGG,KADD;QAEF;QACAQ,mBAAmB,EAAEP,MAAM,CAACG,OAAP,CAAeI;MAHlC,CAAN;;IAKJ,KAAKf,OAAO,CAACK,uBAAb;MACI,OAAM,EACE,GAAGE,KADL;QAEEK,IAAI,EAAEJ,MAAM,CAACG,OAAP,CAAeK;MAFvB,CAAN;;IAIJ;MACI,OAAOT,KAAP;EA/CR;AAiDH,CAnDM;KAAMD,kB"},"metadata":{},"sourceType":"module"}