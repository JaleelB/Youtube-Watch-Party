{"ast":null,"code":"var _s = $RefreshSig$();\n\n// import {useState} from 'react';\nexport default function useIsValidYoutubeLink(ytVideoURL) {\n  _s();\n\n  const [isValid, setIsValid] = useState(false);\n  const regExp = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|\\&v=|\\?v=)([^#\\&\\?]*).*/;\n\n  if (ytVideoURL !== undefined || ytVideoURL !== null) {\n    const match = ytVideoURL.match(regExp);\n\n    if (match && match[2].length === 11) {\n      // setIsValid(true);\n      return true;\n    } // else{\n    //     setIsValid(false)\n    // }\n\n  }\n\n  return false;\n}\n\n_s(useIsValidYoutubeLink, \"f8ezDtY664BjKG4YZGDPR5o1gaY=\");\n\n;","map":{"version":3,"names":["useIsValidYoutubeLink","ytVideoURL","isValid","setIsValid","useState","regExp","undefined","match","length"],"sources":["/Users/jaleelbennett/Documents/Projects/Block Watch - YT Watch Party/Youtube-Watch-Party/client/src/hooks/useIsValidYoutubeLink.js"],"sourcesContent":["// import {useState} from 'react';\n\nexport default function useIsValidYoutubeLink (ytVideoURL){\n    const[isValid, setIsValid] = useState(false);\n\n    const regExp = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|\\&v=|\\?v=)([^#\\&\\?]*).*/;\n\n    if(ytVideoURL !== undefined || ytVideoURL !== null){\n        const match = ytVideoURL.match(regExp);\n        if(match && match[2].length === 11){\n            // setIsValid(true);\n            return true;\n        }\n        // else{\n        //     setIsValid(false)\n        // }\n    }\n\n    return false;\n};"],"mappings":";;AAAA;AAEA,eAAe,SAASA,qBAAT,CAAgCC,UAAhC,EAA2C;EAAA;;EACtD,MAAK,CAACC,OAAD,EAAUC,UAAV,IAAwBC,QAAQ,CAAC,KAAD,CAArC;EAEA,MAAMC,MAAM,GAAG,sEAAf;;EAEA,IAAGJ,UAAU,KAAKK,SAAf,IAA4BL,UAAU,KAAK,IAA9C,EAAmD;IAC/C,MAAMM,KAAK,GAAGN,UAAU,CAACM,KAAX,CAAiBF,MAAjB,CAAd;;IACA,IAAGE,KAAK,IAAIA,KAAK,CAAC,CAAD,CAAL,CAASC,MAAT,KAAoB,EAAhC,EAAmC;MAC/B;MACA,OAAO,IAAP;IACH,CAL8C,CAM/C;IACA;IACA;;EACH;;EAED,OAAO,KAAP;AACH;;GAjBuBR,qB;;AAiBvB"},"metadata":{},"sourceType":"module"}