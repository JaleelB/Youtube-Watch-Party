{"ast":null,"code":"var _jsxFileName = \"/Users/jaleelbennett/Documents/Projects/Block Watch - YT Watch Party/Youtube-Watch-Party/client/src/context/VideoContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect, useRef, createContext } from 'react';\nimport { useSocketContext } from './SocketContext';\nimport { findDOMNode } from 'react-dom';\nimport screenfull from 'screenfull';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoContext = /*#__PURE__*/createContext();\nexport function useVideoContext() {\n  _s();\n\n  return useContext(VideoContext);\n}\n\n_s(useVideoContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function VideoContextProvider(_ref) {\n  _s2();\n\n  let {\n    children\n  } = _ref;\n  // const [fullVideo, setFullVideo] = useState(false);\n  const [playVideo, setPlayVideo] = useState(false);\n  const [videoDuration, setVideoDuration] = useState(null);\n  const [isSeeking, setIsSeeking] = useState(false);\n  const [currentTime, setCurrentTime] = useState(null);\n  const videoPlayerRef = useRef(null);\n\n  const setDuration = duration => setVideoDuration(duration); // const setCurrentVideoTime = (currentTime) => setCurrentTime(currentTime);\n\n\n  const togglePlay = () => setPlayVideo(!playVideo);\n\n  const handleClickFullscreen = () => screenfull.request(findDOMNode(videoPlayerRef.current));\n\n  const handleProgress = progress => {\n    if (!isSeeking) setCurrentTime(progress);\n  };\n\n  const formatTime = timeValue => {\n    timeValue = Number(timeValue);\n    let hours = Math.floor(timeValue / 3600);\n    let minutes = Math.floor(timeValue % 3600 / 60);\n    let seconds = Math.floor(timeValue % 3600 % 60);\n    return hours ? hours + \":\" + minutes + \":\" + seconds : !hours && minutes ? minutes + \":\" + seconds : \"00:00:\" + seconds;\n  };\n\n  const videoProps = {\n    //fullVideo, setFullVideo,\n    playVideo,\n    togglePlay,\n    videoDuration,\n    setVideoDuration,\n    setDuration,\n    formatTime,\n    currentTime,\n    videoPlayerRef,\n    isSeeking,\n    setIsSeeking,\n    handleClickFullscreen,\n    handleProgress\n  }; // const socket = useSocketContext();\n\n  useEffect(() => {\n    // const pauseVideo = true;\n    // socket.on('join_room', () => {\n    //     socket.emit('video_play_status', pauseVideo)\n    // })\n    console.log(\"currentTime: \", currentTime);\n  }, [currentTime]); //emit for video change when user changes video and emit who chnaged video\n  //emit for video pause - [\n  //when a user joins a party pause a video,\n  //when user presses pause button emit who paused video\n  //emit video timestamp\n  //]\n  //emit for video play\n  //emit video timestamp when user joins \n\n  return /*#__PURE__*/_jsxDEV(VideoContext.Provider, {\n    value: {\n      videoProps\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(VideoContextProvider, \"XQQeUv9be5D3IzkfyrYnWZ6dE+U=\");\n\n_c = VideoContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoContextProvider\");","map":{"version":3,"names":["React","useState","useContext","useEffect","useRef","createContext","useSocketContext","findDOMNode","screenfull","VideoContext","useVideoContext","VideoContextProvider","children","playVideo","setPlayVideo","videoDuration","setVideoDuration","isSeeking","setIsSeeking","currentTime","setCurrentTime","videoPlayerRef","setDuration","duration","togglePlay","handleClickFullscreen","request","current","handleProgress","progress","formatTime","timeValue","Number","hours","Math","floor","minutes","seconds","videoProps","console","log"],"sources":["/Users/jaleelbennett/Documents/Projects/Block Watch - YT Watch Party/Youtube-Watch-Party/client/src/context/VideoContext.js"],"sourcesContent":["import React, {useState, useContext, useEffect, useRef, createContext} from 'react';\nimport { useSocketContext } from './SocketContext';\nimport { findDOMNode } from 'react-dom';\nimport screenfull from 'screenfull'\n\nconst VideoContext = createContext();\n\nexport function useVideoContext(){\n    return useContext(VideoContext);\n}\n\nexport function VideoContextProvider({children}){\n\n    // const [fullVideo, setFullVideo] = useState(false);\n    const [playVideo, setPlayVideo] = useState(false);\n    const [videoDuration, setVideoDuration] = useState(null);\n    const [isSeeking, setIsSeeking] = useState(false);\n    const [currentTime, setCurrentTime] = useState(null);\n\n    const videoPlayerRef = useRef(null);\n\n\n    const setDuration = (duration) => setVideoDuration(duration);\n\n    // const setCurrentVideoTime = (currentTime) => setCurrentTime(currentTime);\n\n    const togglePlay = () => setPlayVideo(!playVideo);\n\n    const handleClickFullscreen = () =>  screenfull.request(findDOMNode(videoPlayerRef.current))\n\n    const handleProgress = (progress) =>{ if(!isSeeking) setCurrentTime(progress); }\n\n    const formatTime = (timeValue) => {\n        timeValue = Number(timeValue);\n\n        let hours = Math.floor(timeValue / 3600);\n        let minutes = Math.floor(timeValue % 3600 / 60);\n        let seconds = Math.floor(timeValue % 3600 % 60);\n\n        return hours ? hours + \":\" + minutes + \":\" + seconds\n               : !hours && minutes ? minutes + \":\" + seconds\n               : \"00:00:\" + seconds;\n    }\n\n\n    const videoProps = {\n        //fullVideo, setFullVideo,\n        playVideo, togglePlay,\n        videoDuration, setVideoDuration,\n        setDuration, formatTime, currentTime,\n        videoPlayerRef,isSeeking, setIsSeeking,\n        handleClickFullscreen, handleProgress\n    };\n\n    // const socket = useSocketContext();\n\n    useEffect(()=>{\n        // const pauseVideo = true;\n        // socket.on('join_room', () => {\n        //     socket.emit('video_play_status', pauseVideo)\n        // })\n        console.log(\"currentTime: \", currentTime)\n    },[currentTime])\n\n    \n\n    //emit for video change when user changes video and emit who chnaged video\n    //emit for video pause - [\n        //when a user joins a party pause a video,\n        //when user presses pause button emit who paused video\n        //emit video timestamp\n    //]\n    //emit for video play\n    //emit video timestamp when user joins \n\n     return (\n        <VideoContext.Provider value={{videoProps}}>\n            {children}\n        </VideoContext.Provider>\n    );\n}"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,EAAqCC,SAArC,EAAgDC,MAAhD,EAAwDC,aAAxD,QAA4E,OAA5E;AACA,SAASC,gBAAT,QAAiC,iBAAjC;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AAEA,MAAMC,YAAY,gBAAGJ,aAAa,EAAlC;AAEA,OAAO,SAASK,eAAT,GAA0B;EAAA;;EAC7B,OAAOR,UAAU,CAACO,YAAD,CAAjB;AACH;;GAFeC,e;;AAIhB,OAAO,SAASC,oBAAT,OAAyC;EAAA;;EAAA,IAAX;IAACC;EAAD,CAAW;EAE5C;EACA,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACc,aAAD,EAAgBC,gBAAhB,IAAoCf,QAAQ,CAAC,IAAD,CAAlD;EACA,MAAM,CAACgB,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACkB,WAAD,EAAcC,cAAd,IAAgCnB,QAAQ,CAAC,IAAD,CAA9C;EAEA,MAAMoB,cAAc,GAAGjB,MAAM,CAAC,IAAD,CAA7B;;EAGA,MAAMkB,WAAW,GAAIC,QAAD,IAAcP,gBAAgB,CAACO,QAAD,CAAlD,CAX4C,CAa5C;;;EAEA,MAAMC,UAAU,GAAG,MAAMV,YAAY,CAAC,CAACD,SAAF,CAArC;;EAEA,MAAMY,qBAAqB,GAAG,MAAOjB,UAAU,CAACkB,OAAX,CAAmBnB,WAAW,CAACc,cAAc,CAACM,OAAhB,CAA9B,CAArC;;EAEA,MAAMC,cAAc,GAAIC,QAAD,IAAa;IAAE,IAAG,CAACZ,SAAJ,EAAeG,cAAc,CAACS,QAAD,CAAd;EAA2B,CAAhF;;EAEA,MAAMC,UAAU,GAAIC,SAAD,IAAe;IAC9BA,SAAS,GAAGC,MAAM,CAACD,SAAD,CAAlB;IAEA,IAAIE,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWJ,SAAS,GAAG,IAAvB,CAAZ;IACA,IAAIK,OAAO,GAAGF,IAAI,CAACC,KAAL,CAAWJ,SAAS,GAAG,IAAZ,GAAmB,EAA9B,CAAd;IACA,IAAIM,OAAO,GAAGH,IAAI,CAACC,KAAL,CAAWJ,SAAS,GAAG,IAAZ,GAAmB,EAA9B,CAAd;IAEA,OAAOE,KAAK,GAAGA,KAAK,GAAG,GAAR,GAAcG,OAAd,GAAwB,GAAxB,GAA8BC,OAAjC,GACH,CAACJ,KAAD,IAAUG,OAAV,GAAoBA,OAAO,GAAG,GAAV,GAAgBC,OAApC,GACA,WAAWA,OAFpB;EAGH,CAVD;;EAaA,MAAMC,UAAU,GAAG;IACf;IACAzB,SAFe;IAEJW,UAFI;IAGfT,aAHe;IAGAC,gBAHA;IAIfM,WAJe;IAIFQ,UAJE;IAIUX,WAJV;IAKfE,cALe;IAKAJ,SALA;IAKWC,YALX;IAMfO,qBANe;IAMQG;EANR,CAAnB,CAlC4C,CA2C5C;;EAEAzB,SAAS,CAAC,MAAI;IACV;IACA;IACA;IACA;IACAoC,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BrB,WAA7B;EACH,CANQ,EAMP,CAACA,WAAD,CANO,CAAT,CA7C4C,CAuD5C;EACA;EACI;EACA;EACA;EACJ;EACA;EACA;;EAEC,oBACG,QAAC,YAAD,CAAc,QAAd;IAAuB,KAAK,EAAE;MAACmB;IAAD,CAA9B;IAAA,UACK1B;EADL;IAAA;IAAA;IAAA;EAAA,QADH;AAKJ;;IArEeD,oB;;KAAAA,oB"},"metadata":{},"sourceType":"module"}