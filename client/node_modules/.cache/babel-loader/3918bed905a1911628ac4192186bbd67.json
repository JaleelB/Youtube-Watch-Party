{"ast":null,"code":"var _jsxFileName = \"/Users/jaleelbennett/Documents/Projects/Block Watch - YT Watch Party/Youtube-Watch-Party/client/src/components/comment-field/CommentField.jsx\",\n    _s = $RefreshSig$();\n\nimport { Box } from '@mui/material';\nimport React, { useEffect, useRef } from 'react';\nimport { useConversationContext } from '../../context/ConversationContext';\nimport { CTAButton } from '../../components';\nimport './CommentField.scss';\nimport { Send } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentField = () => {\n  _s();\n\n  const props = useConversationContext();\n  const {\n    messages,\n    setMessages,\n    userMessage,\n    setUserMessage,\n    socket\n  } = props.conversationProps;\n  const inputRef = useRef(null);\n\n  const getUserInput = e => setUserMessage(e.target.value);\n\n  const emitMessage = () => {\n    //updates message list on senders screen to see message they sent\n    setMessages([...messages, userMessage]);\n\n    if (userMessage !== '') {\n      socket.emit('send_message', {\n        message: userMessage // isSender: true\n\n      });\n    }\n\n    setUserMessage('');\n    inputRef.current.value = \"\";\n  };\n\n  const emitMessageOnEnerKeypress = event => {\n    if (event.key === 'Enter') {\n      console.log(userMessage);\n      event.preventDefault();\n      emitMessage();\n    }\n  }; //listens for enter keypress after typing message. if enter key is pressed it calls emit function\n\n\n  useEffect(() => {\n    window.addEventListener('keypress', emitMessageOnEnerKeypress);\n    return () => {\n      window.removeEventListener('keypress', emitMessageOnEnerKeypress);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    id: \"comment-field\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"message\",\n      children: \"To: Everyone\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: \"input-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: inputRef,\n        type: \"text\",\n        className: \"comment-input\",\n        placeholder: \"Type message here...\",\n        onChange: e => {\n          getUserInput(e);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"action-btn-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(CTAButton, {\n          component: /*#__PURE__*/_jsxDEV(Send, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 36\n          }, this),\n          buttonFunction: emitMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CommentField, \"TvwQ3v4UxzRWrePqExQwgDTQjvg=\", false, function () {\n  return [useConversationContext];\n});\n\n_c = CommentField;\nexport default CommentField;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentField\");","map":{"version":3,"names":["Box","React","useEffect","useRef","useConversationContext","CTAButton","Send","CommentField","props","messages","setMessages","userMessage","setUserMessage","socket","conversationProps","inputRef","getUserInput","e","target","value","emitMessage","emit","message","current","emitMessageOnEnerKeypress","event","key","console","log","preventDefault","window","addEventListener","removeEventListener"],"sources":["/Users/jaleelbennett/Documents/Projects/Block Watch - YT Watch Party/Youtube-Watch-Party/client/src/components/comment-field/CommentField.jsx"],"sourcesContent":["import {Box} from '@mui/material';\nimport React,{useEffect, useRef} from 'react';\nimport { useConversationContext } from '../../context/ConversationContext';\nimport {CTAButton} from '../../components';\nimport './CommentField.scss';\nimport { Send } from '@mui/icons-material';\n\n\nconst CommentField = () => {\n\n    const props = useConversationContext();\n    const { \n        messages, setMessages,\n        userMessage, setUserMessage, socket\n    } = props.conversationProps;\n\n\n    const inputRef = useRef(null);\n    const getUserInput = (e) => setUserMessage(e.target.value);\n\n    const emitMessage = () => {\n        \n        //updates message list on senders screen to see message they sent\n        setMessages([\n            ...messages, userMessage\n        ]);\n        \n        if(userMessage !== ''){\n            socket.emit('send_message', {\n                message: userMessage,\n                // isSender: true\n            });\n        }\n\n        setUserMessage('');\n        inputRef.current.value = \"\";\n        \n    };\n\n    const emitMessageOnEnerKeypress = (event) => {\n        if(event.key === 'Enter'){\n            console.log(userMessage);\n            event.preventDefault();\n            emitMessage();\n        }\n        \n    }\n\n    //listens for enter keypress after typing message. if enter key is pressed it calls emit function\n    useEffect(()=>{\n\n        window.addEventListener('keypress', emitMessageOnEnerKeypress);\n        return () => {\n            window.removeEventListener('keypress', emitMessageOnEnerKeypress);\n        };\n\n    },[])\n\n    return(\n        <Box id=\"comment-field\">\n            <span className=\"message\">To: Everyone</span>\n            <Box className=\"input-wrapper\">\n                <input \n                    ref={inputRef}\n                    type=\"text\" \n                    className=\"comment-input\" \n                    placeholder=\"Type message here...\"\n                    onChange = {(e)=> {\n                        getUserInput(e);\n                    }}\n                />\n                \n                <Box className=\"action-btn-wrapper\">\n                    <CTAButton \n                        component={<Send/>} \n                        buttonFunction={emitMessage}\n                    />\n                </Box>\n                \n            </Box>\n            \n        </Box>\n        \n    )\n    \n};\n\nexport default CommentField;"],"mappings":";;;AAAA,SAAQA,GAAR,QAAkB,eAAlB;AACA,OAAOC,KAAP,IAAcC,SAAd,EAAyBC,MAAzB,QAAsC,OAAtC;AACA,SAASC,sBAAT,QAAuC,mCAAvC;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,OAAO,qBAAP;AACA,SAASC,IAAT,QAAqB,qBAArB;;;AAGA,MAAMC,YAAY,GAAG,MAAM;EAAA;;EAEvB,MAAMC,KAAK,GAAGJ,sBAAsB,EAApC;EACA,MAAM;IACFK,QADE;IACQC,WADR;IAEFC,WAFE;IAEWC,cAFX;IAE2BC;EAF3B,IAGFL,KAAK,CAACM,iBAHV;EAMA,MAAMC,QAAQ,GAAGZ,MAAM,CAAC,IAAD,CAAvB;;EACA,MAAMa,YAAY,GAAIC,CAAD,IAAOL,cAAc,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAA1C;;EAEA,MAAMC,WAAW,GAAG,MAAM;IAEtB;IACAV,WAAW,CAAC,CACR,GAAGD,QADK,EACKE,WADL,CAAD,CAAX;;IAIA,IAAGA,WAAW,KAAK,EAAnB,EAAsB;MAClBE,MAAM,CAACQ,IAAP,CAAY,cAAZ,EAA4B;QACxBC,OAAO,EAAEX,WADe,CAExB;;MAFwB,CAA5B;IAIH;;IAEDC,cAAc,CAAC,EAAD,CAAd;IACAG,QAAQ,CAACQ,OAAT,CAAiBJ,KAAjB,GAAyB,EAAzB;EAEH,CAjBD;;EAmBA,MAAMK,yBAAyB,GAAIC,KAAD,IAAW;IACzC,IAAGA,KAAK,CAACC,GAAN,KAAc,OAAjB,EAAyB;MACrBC,OAAO,CAACC,GAAR,CAAYjB,WAAZ;MACAc,KAAK,CAACI,cAAN;MACAT,WAAW;IACd;EAEJ,CAPD,CA/BuB,CAwCvB;;;EACAlB,SAAS,CAAC,MAAI;IAEV4B,MAAM,CAACC,gBAAP,CAAwB,UAAxB,EAAoCP,yBAApC;IACA,OAAO,MAAM;MACTM,MAAM,CAACE,mBAAP,CAA2B,UAA3B,EAAuCR,yBAAvC;IACH,CAFD;EAIH,CAPQ,EAOP,EAPO,CAAT;EASA,oBACI,QAAC,GAAD;IAAK,EAAE,EAAC,eAAR;IAAA,wBACI;MAAM,SAAS,EAAC,SAAhB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI,QAAC,GAAD;MAAK,SAAS,EAAC,eAAf;MAAA,wBACI;QACI,GAAG,EAAET,QADT;QAEI,IAAI,EAAC,MAFT;QAGI,SAAS,EAAC,eAHd;QAII,WAAW,EAAC,sBAJhB;QAKI,QAAQ,EAAKE,CAAD,IAAM;UACdD,YAAY,CAACC,CAAD,CAAZ;QACH;MAPL;QAAA;QAAA;QAAA;MAAA,QADJ,eAWI,QAAC,GAAD;QAAK,SAAS,EAAC,oBAAf;QAAA,uBACI,QAAC,SAAD;UACI,SAAS,eAAE,QAAC,IAAD;YAAA;YAAA;YAAA;UAAA,QADf;UAEI,cAAc,EAAEG;QAFpB;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QAXJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AA2BH,CA7ED;;GAAMb,Y;UAEYH,sB;;;KAFZG,Y;AA+EN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}