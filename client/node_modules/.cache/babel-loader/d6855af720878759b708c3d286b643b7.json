{"ast":null,"code":"var _jsxFileName = \"/Users/jaleelbennett/Documents/Projects/Block Watch - YT Watch Party/Youtube-Watch-Party/client/src/context/VideoContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect, useRef, createContext } from 'react';\nimport { useSocketContext } from './SocketContext';\nimport screenfull from 'screenfull';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoContext = /*#__PURE__*/createContext();\nexport function useVideoContext() {\n  _s();\n\n  return useContext(VideoContext);\n}\n\n_s(useVideoContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function VideoContextProvider(_ref) {\n  _s2();\n\n  let {\n    children\n  } = _ref;\n  // const [fullVideo, setFullVideo] = useState(false);\n  const [playVideo, setPlayVideo] = useState(false);\n  const [videoDuration, setVideoDuration] = useState(null);\n  const [isSeeking, setIsSeeking] = useState(false);\n  const [currentTime, setCurrentTime] = useState(null);\n  const [secondsElapsed, setSecondsElapsed] = useState(null);\n  const videoPlayerRef = useRef(null);\n  const videoWrapperRef = useRef(null);\n\n  const setDuration = duration => setVideoDuration(duration);\n\n  const togglePlay = () => setPlayVideo(!playVideo);\n\n  const handleClickFullscreen = () => screenfull.toggle(videoWrapperRef.current); //sets current time of video based on video slider input\n\n\n  const handleSeekChange = seconds => {\n    setCurrentTime(seconds);\n    setIsSeeking(false);\n  };\n\n  const getTimeElapsed = elapsedSeconds => setSecondsElapsed(elapsedSeconds); //whenever current time of video changes, seek to that portion of video\n\n\n  const handleVideoSeek = progress => videoPlayerRef.current.seekTo(currentTime, 'seconds');\n\n  const formatTime = timeValue => {\n    timeValue = Number(timeValue);\n    let hours = Math.floor(timeValue / 3600);\n    let minutes = Math.floor(timeValue % 3600 / 60);\n    let seconds = Math.floor(timeValue % 3600 % 60);\n    return hours ? hours + \":\" + minutes + \":\" + seconds : !hours && minutes ? minutes + \":\" + seconds : \"0:\" + seconds;\n  };\n\n  useEffect(() => {\n    handleVideoSeek();\n  }, [currentTime]); //runs\n  // useEffect(()=>{\n  //     if(!isSeeking){\n  //         const interval = setInterval(() => setTime(Date.now()), 1000);\n  //         return () => {\n  //             clearInterval(interval);\n  //         };\n  //     }\n  // },[isSeeking])\n\n  const videoProps = {\n    //fullVideo, setFullVideo,\n    playVideo,\n    togglePlay,\n    videoDuration,\n    setVideoDuration,\n    setDuration,\n    formatTime,\n    currentTime,\n    videoPlayerRef,\n    isSeeking,\n    setIsSeeking,\n    handleClickFullscreen,\n    handleSeekChange,\n    handleVideoSeek,\n    videoWrapperRef,\n    getTimeElapsed\n  }; // const socket = useSocketContext();\n\n  useEffect(() => {\n    // const pauseVideo = true;\n    // socket.on('join_room', () => {\n    //     socket.emit('video_play_status', pauseVideo)\n    // })\n    console.log(\"currentTime: \", currentTime);\n    console.log(\"is seeking:  \", isSeeking);\n  }, [currentTime, isSeeking]); //emit for video change when user changes video and emit who chnaged video\n  //emit for video pause - [\n  //when a user joins a party pause a video,\n  //when user presses pause button emit who paused video\n  //emit video timestamp\n  //]\n  //emit for video play\n  //emit video timestamp when user joins \n  //emit current time when user seeks video\n\n  return /*#__PURE__*/_jsxDEV(VideoContext.Provider, {\n    value: {\n      videoProps\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(VideoContextProvider, \"ioQr24m4mgoZIvqGlK5whXGXgYE=\");\n\n_c = VideoContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoContextProvider\");","map":{"version":3,"names":["React","useState","useContext","useEffect","useRef","createContext","useSocketContext","screenfull","VideoContext","useVideoContext","VideoContextProvider","children","playVideo","setPlayVideo","videoDuration","setVideoDuration","isSeeking","setIsSeeking","currentTime","setCurrentTime","secondsElapsed","setSecondsElapsed","videoPlayerRef","videoWrapperRef","setDuration","duration","togglePlay","handleClickFullscreen","toggle","current","handleSeekChange","seconds","getTimeElapsed","elapsedSeconds","handleVideoSeek","progress","seekTo","formatTime","timeValue","Number","hours","Math","floor","minutes","videoProps","console","log"],"sources":["/Users/jaleelbennett/Documents/Projects/Block Watch - YT Watch Party/Youtube-Watch-Party/client/src/context/VideoContext.js"],"sourcesContent":["import React, {useState, useContext, useEffect, useRef, createContext} from 'react';\nimport { useSocketContext } from './SocketContext';\nimport screenfull from 'screenfull'\n\nconst VideoContext = createContext();\n\nexport function useVideoContext(){\n    return useContext(VideoContext);\n}\n\nexport function VideoContextProvider({children}){\n\n    // const [fullVideo, setFullVideo] = useState(false);\n    const [playVideo, setPlayVideo] = useState(false);\n    const [videoDuration, setVideoDuration] = useState(null);\n    const [isSeeking, setIsSeeking] = useState(false);\n    const [currentTime, setCurrentTime] = useState(null);\n    const [secondsElapsed, setSecondsElapsed] = useState(null);\n\n    const videoPlayerRef = useRef(null);\n    const videoWrapperRef = useRef(null);\n\n    const setDuration = (duration) => setVideoDuration(duration);\n    const togglePlay = () => setPlayVideo(!playVideo);\n \n    const handleClickFullscreen = () =>  screenfull.toggle(videoWrapperRef.current);\n\n    //sets current time of video based on video slider input\n    const handleSeekChange = (seconds) => {\n        setCurrentTime(seconds);  \n        setIsSeeking(false);\n    }\n\n    const getTimeElapsed = (elapsedSeconds) => setSecondsElapsed(elapsedSeconds);\n\n    //whenever current time of video changes, seek to that portion of video\n    const handleVideoSeek = (progress) => videoPlayerRef.current.seekTo(currentTime, 'seconds')\n\n    const formatTime = (timeValue) => {\n        timeValue = Number(timeValue);\n\n        let hours = Math.floor(timeValue / 3600);\n        let minutes = Math.floor(timeValue % 3600 / 60);\n        let seconds = Math.floor(timeValue % 3600 % 60);\n\n        return hours ? hours + \":\" + minutes + \":\" + seconds\n               : !hours && minutes ? minutes + \":\" + seconds\n               : \"0:\" + seconds;\n    }\n\n    \n    useEffect(()=>{\n        handleVideoSeek()\n    },[currentTime])\n\n    //runs\n    // useEffect(()=>{\n    //     if(!isSeeking){\n    //         const interval = setInterval(() => setTime(Date.now()), 1000);\n    //         return () => {\n    //             clearInterval(interval);\n    //         };\n    //     }\n        \n    // },[isSeeking])\n\n\n    const videoProps = {\n        //fullVideo, setFullVideo,\n        playVideo, togglePlay,\n        videoDuration, setVideoDuration,\n        setDuration, formatTime, currentTime,\n        videoPlayerRef,isSeeking, setIsSeeking,\n        handleClickFullscreen, handleSeekChange,\n        handleVideoSeek, videoWrapperRef, getTimeElapsed\n    };\n\n    // const socket = useSocketContext();\n\n    useEffect(()=>{\n        // const pauseVideo = true;\n        // socket.on('join_room', () => {\n        //     socket.emit('video_play_status', pauseVideo)\n        // })\n        console.log(\"currentTime: \", currentTime)\n        console.log(\"is seeking:  \", isSeeking)\n    },[currentTime, isSeeking])\n\n    \n\n    //emit for video change when user changes video and emit who chnaged video\n    //emit for video pause - [\n        //when a user joins a party pause a video,\n        //when user presses pause button emit who paused video\n        //emit video timestamp\n    //]\n    //emit for video play\n    //emit video timestamp when user joins \n    //emit current time when user seeks video\n\n     return (\n        <VideoContext.Provider value={{videoProps}}>\n            {children}\n        </VideoContext.Provider>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}