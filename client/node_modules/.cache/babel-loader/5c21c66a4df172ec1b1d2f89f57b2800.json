{"ast":null,"code":"var _jsxFileName = \"/Users/jaleelbennett/Documents/Projects/Block Watch - YT Watch Party/Youtube-Watch-Party/client/src/components/message-body/MessageBody.jsx\",\n    _s = $RefreshSig$();\n\nimport { Box, useFormControl } from '@mui/material';\nimport React, { useState, useCallback, useContext, useEffect } from 'react';\nimport { CommentField, TabSwitch } from '../../components';\nimport { useConversationContext } from '../../context/ConversationContext';\nimport { ParticipantContext } from '../../context/ParticipantContext';\nimport { useSocketContext } from '../../context/SocketContext';\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport './MessageBody.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MessageBody = () => {\n  _s();\n\n  // const socket = useSocketContext();\n  const props = useConversationContext();\n  const {\n    showChat,\n    chat\n  } = props.conversationProps;\n  const {\n    name,\n    participantList\n  } = useContext(ParticipantContext); //scrolls into view when latest message is sent\n\n  const setLastMessageRef = useCallback(node => {\n    if (node) node.scrollIntoView({\n      smooth: true\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    id: \"message-body\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      className: \"tab-details-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"tab-title\",\n        children: showChat ? 'Chat' : 'Participants'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TabSwitch, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      exitBeforeEnter: true,\n      children: [showChat && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(motion.ul, {\n          className: \"messages-container\" // key={selectedTab ? selectedTab.label : \"empty\"}\n          ,\n          initial: {\n            y: 10,\n            opacity: 0\n          },\n          animate: {\n            y: 0,\n            opacity: 1\n          },\n          exit: {\n            y: -10,\n            opacity: 0\n          },\n          transition: {\n            duration: 0.9\n          },\n          children: chat.map((messageValue, index) => {\n            const lastMessage = chat.length - 1 === index;\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: `${messageValue.sender === name ? 'align-left' : ''} ${!messageValue.sender ? 'center-align' : ''}`,\n              ref: lastMessage ? setLastMessageRef : null,\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: `${!messageValue.sender ? 'system-message' : 'chat-message'}`,\n                style: {\n                  backgroundColor: messageValue.sender === name && '#ff0000'\n                },\n                children: messageValue.message ? messageValue.message : messageValue\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"sender-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"sender\",\n                  children: messageValue.sender === name ? 'You' : messageValue.sender ? messageValue.sender : ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"time-sent\",\n                  children: messageValue.timeStamp\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 27\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 25\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(CommentField, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), !showChat && /*#__PURE__*/_jsxDEV(motion.ul, {\n        className: \"participants-container\",\n        initial: {\n          y: 10,\n          opacity: 0\n        },\n        animate: {\n          y: 0,\n          opacity: 1\n        },\n        exit: {\n          y: -10,\n          opacity: 0\n        },\n        transition: {\n          duration: 0.9\n        },\n        children: participantList.map((participant, index) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"participant\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"participant-name-avatar\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"participant-avatar\",\n                children: participant.username !== name ? participant.username[0] : 'Y'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"participant-name\",\n                children: participant.username !== name ? participant.username : 'You'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"active-status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 23\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 21\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MessageBody, \"DzRwmWygi7Wwt5Bytpt0jUxAg5I=\", false, function () {\n  return [useConversationContext];\n});\n\n_c = MessageBody;\nexport default MessageBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessageBody\");","map":{"version":3,"names":["Box","useFormControl","React","useState","useCallback","useContext","useEffect","CommentField","TabSwitch","useConversationContext","ParticipantContext","useSocketContext","motion","AnimatePresence","MessageBody","props","showChat","chat","conversationProps","name","participantList","setLastMessageRef","node","scrollIntoView","smooth","y","opacity","duration","map","messageValue","index","lastMessage","length","sender","backgroundColor","message","timeStamp","participant","username"],"sources":["/Users/jaleelbennett/Documents/Projects/Block Watch - YT Watch Party/Youtube-Watch-Party/client/src/components/message-body/MessageBody.jsx"],"sourcesContent":["import { Box, useFormControl } from '@mui/material';\nimport React, {useState, useCallback, useContext, useEffect} from 'react';\nimport {CommentField, TabSwitch} from '../../components';\nimport { useConversationContext } from '../../context/ConversationContext';\nimport { ParticipantContext } from '../../context/ParticipantContext';\nimport { useSocketContext } from '../../context/SocketContext';\nimport {motion, AnimatePresence} from \"framer-motion\"\nimport './MessageBody.scss';\n\nconst MessageBody = () => {\n\n  // const socket = useSocketContext();\n  \n  const props = useConversationContext();\n  const { \n      showChat, chat\n   } = props.conversationProps;\n\n  const {name, participantList} = useContext(ParticipantContext);\n\n  //scrolls into view when latest message is sent\n  const setLastMessageRef = useCallback( node => {\n    if(node) node.scrollIntoView({ smooth: true});\n  }, [])  \n\n  return (\n    <Box id='message-body'>\n      <Box className=\"tab-details-wrapper\">\n          <h2 className=\"tab-title\">{showChat ? 'Chat' : 'Participants'}</h2>\n          <TabSwitch/>\n      </Box>\n      \n      <AnimatePresence exitBeforeEnter>\n\n        { showChat &&\n          <>\n              <motion.ul \n                className=\"messages-container\"\n                // key={selectedTab ? selectedTab.label : \"empty\"}\n                initial={{ y: 10, opacity: 0 }}\n                animate={{ y: 0, opacity: 1 }}\n                exit={{ y: -10, opacity: 0 }}\n                transition={{ duration: 0.9 }}\n              >\n                  {\n                    chat.map((messageValue, index) => {\n                      \n                      \n                      const lastMessage = chat.length - 1 === index;\n                      return (\n                        <li \n                          key={index} \n                          className={`${messageValue.sender === name ? 'align-left' : ''} ${!messageValue.sender ? 'center-align' : ''}`}\n                          ref={lastMessage ? setLastMessageRef : null}\n                        >\n                          <p \n                            className={`${ !messageValue.sender ? 'system-message' :  'chat-message' }`}\n                            style={{backgroundColor: messageValue.sender === name && '#ff0000'}}\n                          >\n                            {messageValue.message ? messageValue.message : messageValue }\n                          </p>\n                          <p className=\"sender-details\">\n                            <span className=\"sender\">\n                              {\n                                messageValue.sender === name ? 'You':\n                                messageValue.sender ? messageValue.sender\n                                : ''\n                              }\n                            </span>\n                            <span className=\"time-sent\">{messageValue.timeStamp}</span>\n                          </p>\n                          \n                        </li>\n                      )\n                    })\n                  }\n              </motion.ul>\n              \n              <CommentField/>\n            </>\n          }\n\n          { !showChat &&\n            <motion.ul \n              className=\"participants-container\"\n              initial={{ y: 10, opacity: 0 }}\n              animate={{ y: 0, opacity: 1 }}\n              exit={{ y: -10, opacity: 0 }}\n              transition={{ duration: 0.9 }}\n            >\n              {\n                participantList.map((participant, index)=>{\n                  return(\n                    <li \n                      key={index}\n                      className=\"participant\"\n                    >\n                      <p className=\"participant-name-avatar\">\n                        <span className=\"participant-avatar\">\n                          {\n                            participant.username !== name ? participant.username[0] :  'Y'\n                          }\n                        </span>\n                        <span className=\"participant-name\">\n                          {\n                            participant.username !== name ? participant.username : 'You'\n                          }\n                        </span>\n                      </p>\n\n                      <span className=\"active-status\"></span>\n                    </li>\n                  )\n                })\n              }\n            </motion.ul>\n          }\n\n      </AnimatePresence>\n\n    </Box>\n  )\n};\n\nexport default MessageBody;"],"mappings":"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"},"metadata":{},"sourceType":"module"}