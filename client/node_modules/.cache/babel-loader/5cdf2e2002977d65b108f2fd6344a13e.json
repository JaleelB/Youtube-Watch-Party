{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\nexport default function useIsValidYoutubeLink(ytVideoURL) {\n  _s();\n\n  const [inValidLink, setInvalidlink] = useState(false);\n  const regExp = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|\\&v=|\\?v=)([^#\\&\\?]*).*/;\n  const match = ytVideoURL.match(regExp);\n\n  if (match && match[2].length === 11) {\n    setInvalidlink(false);\n  } else {\n    setInvalidlink(true);\n  }\n\n  return {\n    invalidLink\n  };\n}\n\n_s(useIsValidYoutubeLink, \"fvRPzcCENcRCWxBLzqMtKJTOv+c=\");","map":{"version":3,"names":["useState","useIsValidYoutubeLink","ytVideoURL","inValidLink","setInvalidlink","regExp","match","length","invalidLink"],"sources":["/Users/jaleelbennett/Documents/Projects/Block Watch - YT Watch Party/Youtube-Watch-Party/client/src/hooks/useIsValidYTLink.js"],"sourcesContent":["import {useState} from 'react'\n\nexport default function useIsValidYoutubeLink(ytVideoURL){\n\n    const [inValidLink, setInvalidlink] = useState(false);\n\n    const regExp = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|\\&v=|\\?v=)([^#\\&\\?]*).*/;\n\n        const match = ytVideoURL.match(regExp);\n\n        if(match && match[2].length === 11){\n            setInvalidlink(false);\n        }else{\n            setInvalidlink(true);\n        }\n\n\n    return {invalidLink};\n}"],"mappings":";;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AAEA,eAAe,SAASC,qBAAT,CAA+BC,UAA/B,EAA0C;EAAA;;EAErD,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,KAAD,CAA9C;EAEA,MAAMK,MAAM,GAAG,sEAAf;EAEI,MAAMC,KAAK,GAAGJ,UAAU,CAACI,KAAX,CAAiBD,MAAjB,CAAd;;EAEA,IAAGC,KAAK,IAAIA,KAAK,CAAC,CAAD,CAAL,CAASC,MAAT,KAAoB,EAAhC,EAAmC;IAC/BH,cAAc,CAAC,KAAD,CAAd;EACH,CAFD,MAEK;IACDA,cAAc,CAAC,IAAD,CAAd;EACH;;EAGL,OAAO;IAACI;EAAD,CAAP;AACH;;GAhBuBP,qB"},"metadata":{},"sourceType":"module"}