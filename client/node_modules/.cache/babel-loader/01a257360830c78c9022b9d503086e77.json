{"ast":null,"code":"var _jsxFileName = \"/Users/jaleelbennett/Documents/Projects/Block Watch - YT Watch Party/Youtube-Watch-Party/client/src/components/message-body/MessageBody.jsx\",\n    _s = $RefreshSig$();\n\nimport { Box, useFormControl } from '@mui/material';\nimport React, { useState, useCallback, useContext, useEffect } from 'react';\nimport { CommentField, TabSwitch } from '../../components';\nimport { useConversationContext } from '../../context/ConversationContext';\nimport { ParticipantContext } from '../../context/ParticipantContext';\nimport './MessageBody.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MessageBody = () => {\n  _s();\n\n  const socket = useSocketContext();\n  const props = useConversationContext();\n  const {\n    showChat,\n    messages,\n    setMessages // , socket\n\n  } = props.conversationProps;\n  const {\n    name\n  } = useContext(ParticipantContext); //scrolls into view when latest message is sent\n\n  const setLastMessageRef = useCallback(node => {\n    if (node) node.scrollIntoView({\n      smooth: true\n    });\n  }, []);\n\n  const addUserMessage = async messageData => {\n    if (messageData) {\n      //displays message for all users\n      setMessages([...messages, messageData]);\n    }\n  };\n\n  const addSystemMessage = async message => {\n    if (message) {\n      //displays message for all users\n      setMessages([...messages, message]);\n    }\n  };\n\n  useEffect(() => {\n    if (socket === null) return;\n    socket.on(\"receive_chat_message\", data => {\n      addUserMessage(data);\n    });\n    socket.on(\"user_connected\", name => {\n      addSystemMessage(`${name} has joined the party`);\n    });\n    return () => {\n      socket.off('system_message');\n      socket.off('user_connected');\n    };\n  }, [socket]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    id: \"message-body\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      className: \"tab-details-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"tab-title\",\n        children: showChat ? 'Chat' : 'Participants'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TabSwitch, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"messages-container\",\n      children: messages.map((messageValue, index) => {\n        const lastMessage = messages.length - 1 === index;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `${messageValue.sender === name ? 'align-left' : ''} ${!messageValue.sender ? 'center-align' : ''}`,\n          ref: lastMessage ? setLastMessageRef : null,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: `${!messageValue.sender ? 'system-message' : 'chat-message'}`,\n            style: {\n              backgroundColor: messageValue.sender === name && '#ff0000'\n            },\n            children: messageValue.message ? messageValue.message : messageValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"sender-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"sender\",\n              children: messageValue.sender === name ? 'You' : messageValue.sender ? messageValue.sender : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"time-sent\",\n              children: messageValue.timeStamp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CommentField, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MessageBody, \"4118L56DlEZNqa1sFZDb2DeByYc=\", true, function () {\n  return [useConversationContext];\n});\n\n_c = MessageBody;\nexport default MessageBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessageBody\");","map":{"version":3,"names":["Box","useFormControl","React","useState","useCallback","useContext","useEffect","CommentField","TabSwitch","useConversationContext","ParticipantContext","MessageBody","socket","useSocketContext","props","showChat","messages","setMessages","conversationProps","name","setLastMessageRef","node","scrollIntoView","smooth","addUserMessage","messageData","addSystemMessage","message","on","data","off","map","messageValue","index","lastMessage","length","sender","backgroundColor","timeStamp"],"sources":["/Users/jaleelbennett/Documents/Projects/Block Watch - YT Watch Party/Youtube-Watch-Party/client/src/components/message-body/MessageBody.jsx"],"sourcesContent":["import { Box, useFormControl } from '@mui/material';\nimport React, {useState, useCallback, useContext, useEffect} from 'react';\nimport {CommentField, TabSwitch} from '../../components';\nimport { useConversationContext } from '../../context/ConversationContext';\nimport { ParticipantContext } from '../../context/ParticipantContext';\nimport './MessageBody.scss';\n\nconst MessageBody = () => {\n\n  const socket = useSocketContext();\n  \n  const props = useConversationContext();\n  const { \n      showChat, messages, setMessages\n      // , socket\n   } = props.conversationProps;\n\n  const {name} = useContext(ParticipantContext);\n\n  //scrolls into view when latest message is sent\n  const setLastMessageRef = useCallback( node => {\n    if(node) node.scrollIntoView({ smooth: true});\n  }, [])\n\n  const addUserMessage = async (messageData) => {   \n    if(messageData){\n      //displays message for all users\n      setMessages([\n        ...messages, messageData\n      ])\n    }\n  };\n\n  const addSystemMessage = async (message) => {   \n    if(message){\n      //displays message for all users\n      setMessages([\n        ...messages, message\n      ])\n    }\n  };\n\n  useEffect(()=>{\n\n    if(socket === null) return;\n    socket.on(\"receive_chat_message\", (data) =>{\n      addUserMessage(data)\n    })\n\n    socket.on(\"user_connected\", (name) =>{\n      addSystemMessage(`${name} has joined the party`)\n    })\n\n    return () => {\n      socket.off('system_message');\n      socket.off('user_connected');\n    }\n  },[socket])\n\n\n  \n  \n\n  return (\n    <Box id='message-body'>\n      <Box className=\"tab-details-wrapper\">\n          <h2 className=\"tab-title\">{showChat ? 'Chat' : 'Participants'}</h2>\n          <TabSwitch/>\n      </Box>\n        \n      <ul className=\"messages-container\">\n          {\n            messages.map((messageValue, index) => {\n              \n              \n              const lastMessage = messages.length - 1 === index;\n              return (\n                <li \n                  key={index} \n                  className={`${messageValue.sender === name ? 'align-left' : ''} ${!messageValue.sender ? 'center-align' : ''}`}\n                  ref={lastMessage ? setLastMessageRef : null}\n                >\n                  <p \n                    className={`${ !messageValue.sender ? 'system-message' :  'chat-message' }`}\n                    style={{backgroundColor: messageValue.sender === name && '#ff0000'}}\n                  >\n                    {messageValue.message ? messageValue.message : messageValue }\n                  </p>\n                  <p className=\"sender-details\">\n                    <p className=\"sender\">\n                      {\n                        messageValue.sender === name ? 'You':\n                        messageValue.sender ? messageValue.sender\n                        : ''\n                      }\n                    </p>\n                    <p className=\"time-sent\">{messageValue.timeStamp}</p>\n                  </p>\n                  \n                </li>\n              )\n            })\n          }\n      </ul>\n\n      <CommentField/>\n\n    </Box>\n  )\n};\n\nexport default MessageBody;"],"mappings":"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"},"metadata":{},"sourceType":"module"}