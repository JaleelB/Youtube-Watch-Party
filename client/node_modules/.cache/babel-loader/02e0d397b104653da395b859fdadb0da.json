{"ast":null,"code":"var _jsxFileName = \"/Users/jaleelbennett/Documents/Projects/Block Watch - YT Watch Party/Youtube-Watch-Party/client/src/components/message-body/MessageBody.jsx\",\n    _s = $RefreshSig$();\n\nimport { Box, useFormControl } from '@mui/material';\nimport React, { useState, useCallback, useContext, useEffect } from 'react';\nimport { CommentField, TabSwitch } from '../../components';\nimport { useConversationContext } from '../../context/ConversationContext';\nimport { ParticipantContext } from '../../context/ParticipantContext';\nimport { useSocketContext } from '../../context/SocketContext';\nimport './MessageBody.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MessageBody = () => {\n  _s();\n\n  // const socket = useSocketContext();\n  // const props = useConversationContext();\n  // const { \n  //     showChat, chat, setChat\n  //     // , socket\n  //  } = props.conversationProps;\n  const {\n    name\n  } = useContext(ParticipantContext); //scrolls into view when latest message is sent\n\n  const setLastMessageRef = useCallback(node => {\n    if (node) node.scrollIntoView({\n      smooth: true\n    });\n  }, []);\n\n  const addMessageToChat = async messageData => {\n    if (messageData) {\n      //displays message for all users\n      setChat([...chat, messageData]);\n    }\n  }; // const addSystemMessage = async (message) => {   \n  //   if(message){\n  //     //displays message for all users\n  //     setMessages([\n  //       ...messages, message\n  //     ])\n  //   }\n  // };\n  // useEffect(()=>{\n  //   if(!socket) return;\n  //   socket.on(\"receive_chat_message\", (data) =>{\n  //     addUserMessage(data)\n  //   })\n  //   socket.on(\"user_connected\", (name) =>{\n  //     addSystemMessage(`${name} has joined the party`)\n  //   })\n  //   return () => {\n  //     socket.off('system_message');\n  //     socket.off('user_connected');\n  //   }\n  // },[socket])\n\n\n  const socket = useSocketContext();\n  const props = useConversationContext();\n  const {\n    showChat,\n    setChat,\n    chat\n  } = props.conversationProps; // async function addMessageToChat (messageData){\n  //     setChat([\n  //         ...chat, messageData\n  //     ])\n  // }\n  // useEffect(()=>{\n\n  if (!socket) return;\n  socket.on('system_message', message => {\n    addMessageToChat(message);\n  });\n  socket.on(\"receive_chat_message\", data => {\n    addMessageToChat(data);\n  });\n  return () => {\n    socket.off('recieve_message');\n    socket.off('system_message');\n    socket.off('user_connected');\n  }; // },[socket])\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    id: \"message-body\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      className: \"tab-details-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"tab-title\",\n        children: showChat ? 'Chat' : 'Participants'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TabSwitch, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"messages-container\",\n      children: chat.map((messageValue, index) => {\n        const lastMessage = chat.length - 1 === index;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `${messageValue.sender === name ? 'align-left' : ''} ${!messageValue.sender ? 'center-align' : ''}`,\n          ref: lastMessage ? setLastMessageRef : null,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: `${!messageValue.sender ? 'system-message' : 'chat-message'}`,\n            style: {\n              backgroundColor: messageValue.sender === name && '#ff0000'\n            },\n            children: messageValue.message ? messageValue.message : messageValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"sender-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"sender\",\n              children: messageValue.sender === name ? 'You' : messageValue.sender ? messageValue.sender : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"time-sent\",\n              children: messageValue.timeStamp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CommentField, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MessageBody, \"Ol/+88QJ/VkS72x4cr/OmUR1Cuc=\", false, function () {\n  return [useSocketContext, useConversationContext];\n});\n\n_c = MessageBody;\nexport default MessageBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessageBody\");","map":{"version":3,"names":["Box","useFormControl","React","useState","useCallback","useContext","useEffect","CommentField","TabSwitch","useConversationContext","ParticipantContext","useSocketContext","MessageBody","name","setLastMessageRef","node","scrollIntoView","smooth","addMessageToChat","messageData","setChat","chat","socket","props","showChat","conversationProps","on","message","data","off","map","messageValue","index","lastMessage","length","sender","backgroundColor","timeStamp"],"sources":["/Users/jaleelbennett/Documents/Projects/Block Watch - YT Watch Party/Youtube-Watch-Party/client/src/components/message-body/MessageBody.jsx"],"sourcesContent":["import { Box, useFormControl } from '@mui/material';\nimport React, {useState, useCallback, useContext, useEffect} from 'react';\nimport {CommentField, TabSwitch} from '../../components';\nimport { useConversationContext } from '../../context/ConversationContext';\nimport { ParticipantContext } from '../../context/ParticipantContext';\nimport { useSocketContext } from '../../context/SocketContext';\nimport './MessageBody.scss';\n\nconst MessageBody = () => {\n\n  // const socket = useSocketContext();\n  \n  // const props = useConversationContext();\n  // const { \n  //     showChat, chat, setChat\n  //     // , socket\n  //  } = props.conversationProps;\n\n  const {name} = useContext(ParticipantContext);\n\n  //scrolls into view when latest message is sent\n  const setLastMessageRef = useCallback( node => {\n    if(node) node.scrollIntoView({ smooth: true});\n  }, [])\n\n  const addMessageToChat = async (messageData) => {   \n    if(messageData){\n      //displays message for all users\n      setChat([\n        ...chat, messageData\n      ])\n    }\n  };\n\n  // const addSystemMessage = async (message) => {   \n  //   if(message){\n  //     //displays message for all users\n  //     setMessages([\n  //       ...messages, message\n  //     ])\n  //   }\n  // };\n\n  // useEffect(()=>{\n\n  //   if(!socket) return;\n  //   socket.on(\"receive_chat_message\", (data) =>{\n  //     addUserMessage(data)\n  //   })\n\n  //   socket.on(\"user_connected\", (name) =>{\n  //     addSystemMessage(`${name} has joined the party`)\n  //   })\n\n  //   return () => {\n  //     socket.off('system_message');\n  //     socket.off('user_connected');\n  //   }\n  // },[socket])\n\n    const socket = useSocketContext();\n\n    const props = useConversationContext();\n    const { showChat, setChat, chat} = props.conversationProps;\n\n    // async function addMessageToChat (messageData){\n    //     setChat([\n    //         ...chat, messageData\n    //     ])\n    // }\n\n    // useEffect(()=>{\n\n        if(!socket) return;\n\n        socket.on('system_message', (message)=>{\n            addMessageToChat(message)\n        })\n\n        socket.on(\"receive_chat_message\", (data) =>{\n            addMessageToChat(data)\n        })\n      \n        return () => {\n            socket.off('recieve_message');\n            socket.off('system_message');\n            socket.off('user_connected');\n        }\n\n    // },[socket])\n\n\n  \n  \n\n  return (\n    <Box id='message-body'>\n      <Box className=\"tab-details-wrapper\">\n          <h2 className=\"tab-title\">{showChat ? 'Chat' : 'Participants'}</h2>\n          <TabSwitch/>\n      </Box>\n        \n      <ul className=\"messages-container\">\n          {\n            chat.map((messageValue, index) => {\n              \n              \n              const lastMessage = chat.length - 1 === index;\n              return (\n                <li \n                  key={index} \n                  className={`${messageValue.sender === name ? 'align-left' : ''} ${!messageValue.sender ? 'center-align' : ''}`}\n                  ref={lastMessage ? setLastMessageRef : null}\n                >\n                  <p \n                    className={`${ !messageValue.sender ? 'system-message' :  'chat-message' }`}\n                    style={{backgroundColor: messageValue.sender === name && '#ff0000'}}\n                  >\n                    {messageValue.message ? messageValue.message : messageValue }\n                  </p>\n                  <p className=\"sender-details\">\n                    <span className=\"sender\">\n                      {\n                        messageValue.sender === name ? 'You':\n                        messageValue.sender ? messageValue.sender\n                        : ''\n                      }\n                    </span>\n                    <span className=\"time-sent\">{messageValue.timeStamp}</span>\n                  </p>\n                  \n                </li>\n              )\n            })\n          }\n      </ul>\n\n      <CommentField/>\n\n    </Box>\n  )\n};\n\nexport default MessageBody;"],"mappings":"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"},"metadata":{},"sourceType":"module"}