{"ast":null,"code":"var _jsxFileName = \"/Users/jaleelbennett/Documents/Projects/Block Watch - YT Watch Party/Youtube-Watch-Party/client/src/context/ConversationContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useContext, useState, createContext } from 'react'; // import io from 'socket.io-client';\n// const socket = io.connect('http://localhost:4000');\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConversationPropsContext = /*#__PURE__*/createContext();\nexport function useConversationContext() {\n  _s();\n\n  return useContext(ConversationPropsContext);\n}\n\n_s(useConversationContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\n;\nexport function ConversationPropsProvider(_ref) {\n  _s2();\n\n  let {\n    children\n  } = _ref;\n  const [showChat, setShowChat] = useState(true);\n  const [messages, setMessages] = useState([]);\n  const [userMessage, setUserMessage] = useState('');\n  const conversationProps = {\n    showChat,\n    setShowChat,\n    messages,\n    setMessages,\n    userMessage,\n    setUserMessage //socket\n\n  };\n  return /*#__PURE__*/_jsxDEV(ConversationPropsContext.Provider, {\n    value: {\n      conversationProps\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(ConversationPropsProvider, \"cZz0UXDk4Vd/SMp71967r1i7smQ=\");\n\n_c = ConversationPropsProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConversationPropsProvider\");","map":{"version":3,"names":["useContext","useState","createContext","ConversationPropsContext","useConversationContext","ConversationPropsProvider","children","showChat","setShowChat","messages","setMessages","userMessage","setUserMessage","conversationProps"],"sources":["/Users/jaleelbennett/Documents/Projects/Block Watch - YT Watch Party/Youtube-Watch-Party/client/src/context/ConversationContext.js"],"sourcesContent":["import {useContext, useState, createContext} from 'react';\n// import io from 'socket.io-client';\n\n// const socket = io.connect('http://localhost:4000');\n\nconst ConversationPropsContext = createContext();\n\nexport function useConversationContext(){\n    return useContext(ConversationPropsContext)\n};\n\nexport function ConversationPropsProvider({children}){\n\n    const [showChat, setShowChat] = useState(true);\n\n    const [ messages, setMessages ] = useState([]);\n    const [ userMessage, setUserMessage ] = useState('');\n\n\n    const conversationProps = {\n        showChat, setShowChat,\n        messages, setMessages,\n        userMessage, setUserMessage,\n        //socket\n    };\n\n    return (\n        <ConversationPropsContext.Provider value={{conversationProps}}>\n            {children}\n        </ConversationPropsContext.Provider>\n    );\n}\n"],"mappings":";;;;AAAA,SAAQA,UAAR,EAAoBC,QAApB,EAA8BC,aAA9B,QAAkD,OAAlD,C,CACA;AAEA;;;AAEA,MAAMC,wBAAwB,gBAAGD,aAAa,EAA9C;AAEA,OAAO,SAASE,sBAAT,GAAiC;EAAA;;EACpC,OAAOJ,UAAU,CAACG,wBAAD,CAAjB;AACH;;GAFeC,sB;;AAEf;AAED,OAAO,SAASC,yBAAT,OAA8C;EAAA;;EAAA,IAAX;IAACC;EAAD,CAAW;EAEjD,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,IAAD,CAAxC;EAEA,MAAM,CAAEQ,QAAF,EAAYC,WAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;EACA,MAAM,CAAEU,WAAF,EAAeC,cAAf,IAAkCX,QAAQ,CAAC,EAAD,CAAhD;EAGA,MAAMY,iBAAiB,GAAG;IACtBN,QADsB;IACZC,WADY;IAEtBC,QAFsB;IAEZC,WAFY;IAGtBC,WAHsB;IAGTC,cAHS,CAItB;;EAJsB,CAA1B;EAOA,oBACI,QAAC,wBAAD,CAA0B,QAA1B;IAAmC,KAAK,EAAE;MAACC;IAAD,CAA1C;IAAA,UACKP;EADL;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH;;IApBeD,yB;;KAAAA,yB"},"metadata":{},"sourceType":"module"}