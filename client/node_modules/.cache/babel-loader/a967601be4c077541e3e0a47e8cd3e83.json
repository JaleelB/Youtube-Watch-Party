{"ast":null,"code":"var _jsxFileName = \"/Users/jaleelbennett/Documents/Projects/Watch Party App/client/src/components/message-body/MessageBody.jsx\",\n    _s = $RefreshSig$();\n\nimport { Box } from '@mui/material';\nimport React, { useEffect, useRef, useCallback } from 'react';\nimport { CommentField, TabSwitch } from '../../components';\nimport { usePartyRoomPropsContext } from '../../context/PartyRoomContext';\nimport './MessageBody.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MessageBody = () => {\n  _s();\n\n  const partyRoomProps = usePartyRoomPropsContext();\n  const {\n    showChat,\n    messages,\n    setMessages,\n    socket\n  } = partyRoomProps.partyRoomProps;\n  const inputRef = useRef(null); //scrolls into view when latest message is sent\n\n  const setLastMessageRef = useCallback(node => {\n    node.scrollIntoView({\n      smooth: true\n    });\n  }, []);\n\n  const addMessage = message => {\n    if (message !== '') {\n      setMessages([...messages, message]);\n    }\n  }; // useEffect(()=>{\n\n\n  socket.on(\"receive_message\", data => {\n    addMessage(data.message);\n  }); // },[socket]);\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    id: \"message-body\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      className: \"tab-details-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"tab-title\",\n        children: showChat ? 'Chat' : 'Participants'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TabSwitch, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"messages-container\",\n      children: messages.map((messageValue, index) => {\n        //checks if the current message is the last one in the message array\n        const lastMessage = messages.length() - 1 === index;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"message\",\n          ref: lastMessage ? lastMessageRef : null,\n          children: messageValue\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CommentField, {\n      inputRef: inputRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MessageBody, \"mrd88wWrSaOOdn3EQcqjlPaO7jI=\", false, function () {\n  return [usePartyRoomPropsContext];\n});\n\n_c = MessageBody;\nexport default MessageBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessageBody\");","map":{"version":3,"names":["Box","React","useEffect","useRef","useCallback","CommentField","TabSwitch","usePartyRoomPropsContext","MessageBody","partyRoomProps","showChat","messages","setMessages","socket","inputRef","setLastMessageRef","node","scrollIntoView","smooth","addMessage","message","on","data","map","messageValue","index","lastMessage","length","lastMessageRef"],"sources":["/Users/jaleelbennett/Documents/Projects/Watch Party App/client/src/components/message-body/MessageBody.jsx"],"sourcesContent":["import { Box } from '@mui/material';\nimport React, {useEffect, useRef, useCallback} from 'react';\nimport {CommentField, TabSwitch} from '../../components';\nimport { usePartyRoomPropsContext } from '../../context/PartyRoomContext';\nimport './MessageBody.scss';\n\nconst MessageBody = () => {\n\n  const partyRoomProps = usePartyRoomPropsContext();\n  const { \n      showChat, messages, setMessages, socket\n   } = partyRoomProps.partyRoomProps;\n\n  const inputRef = useRef(null);\n\n  //scrolls into view when latest message is sent\n  const setLastMessageRef = useCallback( node => {\n    node.scrollIntoView({ smooth: true});\n  }, [])\n\n  const addMessage = (message) => {   \n    if(message !== ''){\n      setMessages([\n        ...messages, message\n      ])\n    }\n  };\n\n  // useEffect(()=>{\n    socket.on(\"receive_message\", (data) =>{\n      addMessage(data.message)\n    })\n\n  // },[socket]);\n\n\n\n  return (\n    <Box id='message-body'>\n      <Box className=\"tab-details-wrapper\">\n          <h2 className=\"tab-title\">{showChat ? 'Chat' : 'Participants'}</h2>\n          <TabSwitch/>\n      </Box>\n        \n      <ul className=\"messages-container\">\n          {\n            messages.map((messageValue, index) => {\n\n              //checks if the current message is the last one in the message array\n              const lastMessage = messages.length() - 1 === index;\n              return (\n                <li \n                  key={index} \n                  className=\"message\"\n                  ref={lastMessage ? lastMessageRef : null}\n                >\n                  {messageValue}\n                </li>\n              )\n            })\n          }\n      </ul>\n\n      <CommentField inputRef={inputRef}/>\n\n    </Box>\n  )\n};\n\nexport default MessageBody;"],"mappings":";;;AAAA,SAASA,GAAT,QAAoB,eAApB;AACA,OAAOC,KAAP,IAAeC,SAAf,EAA0BC,MAA1B,EAAkCC,WAAlC,QAAoD,OAApD;AACA,SAAQC,YAAR,EAAsBC,SAAtB,QAAsC,kBAAtC;AACA,SAASC,wBAAT,QAAyC,gCAAzC;AACA,OAAO,oBAAP;;;AAEA,MAAMC,WAAW,GAAG,MAAM;EAAA;;EAExB,MAAMC,cAAc,GAAGF,wBAAwB,EAA/C;EACA,MAAM;IACFG,QADE;IACQC,QADR;IACkBC,WADlB;IAC+BC;EAD/B,IAEDJ,cAAc,CAACA,cAFpB;EAIA,MAAMK,QAAQ,GAAGX,MAAM,CAAC,IAAD,CAAvB,CAPwB,CASxB;;EACA,MAAMY,iBAAiB,GAAGX,WAAW,CAAEY,IAAI,IAAI;IAC7CA,IAAI,CAACC,cAAL,CAAoB;MAAEC,MAAM,EAAE;IAAV,CAApB;EACD,CAFoC,EAElC,EAFkC,CAArC;;EAIA,MAAMC,UAAU,GAAIC,OAAD,IAAa;IAC9B,IAAGA,OAAO,KAAK,EAAf,EAAkB;MAChBR,WAAW,CAAC,CACV,GAAGD,QADO,EACGS,OADH,CAAD,CAAX;IAGD;EACF,CAND,CAdwB,CAsBxB;;;EACEP,MAAM,CAACQ,EAAP,CAAU,iBAAV,EAA8BC,IAAD,IAAS;IACpCH,UAAU,CAACG,IAAI,CAACF,OAAN,CAAV;EACD,CAFD,EAvBsB,CA2BxB;;EAIA,oBACE,QAAC,GAAD;IAAK,EAAE,EAAC,cAAR;IAAA,wBACE,QAAC,GAAD;MAAK,SAAS,EAAC,qBAAf;MAAA,wBACI;QAAI,SAAS,EAAC,WAAd;QAAA,UAA2BV,QAAQ,GAAG,MAAH,GAAY;MAA/C;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI,QAAC,SAAD;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAME;MAAI,SAAS,EAAC,oBAAd;MAAA,UAEMC,QAAQ,CAACY,GAAT,CAAa,CAACC,YAAD,EAAeC,KAAf,KAAyB;QAEpC;QACA,MAAMC,WAAW,GAAGf,QAAQ,CAACgB,MAAT,KAAoB,CAApB,KAA0BF,KAA9C;QACA,oBACE;UAEE,SAAS,EAAC,SAFZ;UAGE,GAAG,EAAEC,WAAW,GAAGE,cAAH,GAAoB,IAHtC;UAAA,UAKGJ;QALH,GACOC,KADP;UAAA;UAAA;UAAA;QAAA,QADF;MASD,CAbD;IAFN;MAAA;MAAA;MAAA;IAAA,QANF,eAyBE,QAAC,YAAD;MAAc,QAAQ,EAAEX;IAAxB;MAAA;MAAA;MAAA;IAAA,QAzBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA8BD,CA7DD;;GAAMN,W;UAEmBD,wB;;;KAFnBC,W;AA+DN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}