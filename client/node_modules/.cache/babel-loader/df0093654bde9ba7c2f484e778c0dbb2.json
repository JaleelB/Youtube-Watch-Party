{"ast":null,"code":"var _jsxFileName = \"/Users/jaleelbennett/Documents/Projects/Block Watch - YT Watch Party/Youtube-Watch-Party/client/src/components/progress-bar/ProgressBar.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Box } from '@mui/material';\nimport './ProgressBar.scss';\nimport { Fullscreen, Pause, PlayArrow } from '@mui/icons-material';\nimport { useVideoContext } from '../../context/VideoContext';\nimport './ProgressBar.scss';\nimport { VideoSeekSlider } from \"react-video-seek-slider\";\nimport \"react-video-seek-slider/styles.css\";\nimport { useSocketContext } from '../../context/SocketContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProgressBar = () => {\n  _s();\n\n  const socket = useSocketContext();\n  const videoProps = useVideoContext();\n  const {\n    togglePlay,\n    videoDuration,\n    playVideo,\n    currentTime,\n    formatTime,\n    handleClickFullscreen,\n    handleSeekChange,\n    secondsElapsed\n  } = videoProps.videoProps;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    id: \"progress-bar\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      className: \"video-actions\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        onClick: () => {\n          togglePlay();\n          if (playVideo) socket.emit(\"pause_all_videos\", {\n            playVideo: false\n          });else if (!playVideo) socket.emit(\"play_all_videos\", {\n            playVideo: true\n          });\n        },\n        children: playVideo ? /*#__PURE__*/_jsxDEV(Pause, {\n          className: \"pause-icon icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(PlayArrow, {\n          className: \"play-icon icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(VideoSeekSlider, {\n        max: videoDuration,\n        currentTime: secondsElapsed,\n        progress: 400,\n        onChange: time => {\n          // setIsSeeking(true);\n          handleSeekChange(time);\n        },\n        offset: 0,\n        secondsPrefix: \"00:00:\",\n        minutesPrefix: \"00:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"video-timestamp\",\n        children: formatTime(secondsElapsed) + \" / \" + formatTime(videoDuration)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Fullscreen, {\n        className: \"icon\",\n        onClick: handleClickFullscreen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProgressBar, \"V2+itz7RsomssNW+mjjY/R+AvW4=\", false, function () {\n  return [useSocketContext, useVideoContext];\n});\n\n_c = ProgressBar;\nexport default ProgressBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProgressBar\");","map":{"version":3,"names":["React","Box","Fullscreen","Pause","PlayArrow","useVideoContext","VideoSeekSlider","useSocketContext","ProgressBar","socket","videoProps","togglePlay","videoDuration","playVideo","currentTime","formatTime","handleClickFullscreen","handleSeekChange","secondsElapsed","emit","time"],"sources":["/Users/jaleelbennett/Documents/Projects/Block Watch - YT Watch Party/Youtube-Watch-Party/client/src/components/progress-bar/ProgressBar.jsx"],"sourcesContent":["import React from 'react';\nimport {Box} from '@mui/material';\nimport './ProgressBar.scss';\nimport { Fullscreen, Pause, PlayArrow } from '@mui/icons-material';\nimport {useVideoContext} from '../../context/VideoContext';\nimport './ProgressBar.scss';\nimport { VideoSeekSlider } from \"react-video-seek-slider\";\nimport \"react-video-seek-slider/styles.css\";\nimport { useSocketContext } from '../../context/SocketContext';\n\nconst ProgressBar = () => {\n\n    const socket = useSocketContext();\n\n    const videoProps = useVideoContext();\n    const { \n        togglePlay, videoDuration, playVideo, currentTime,\n        formatTime, handleClickFullscreen, handleSeekChange,\n        secondsElapsed\n    } = videoProps.videoProps;\n\n    return(\n        <Box id=\"progress-bar\">\n            \n                <Box className=\"video-actions\">\n                    <Box\n                        onClick={() => {\n                            togglePlay()\n                            if(playVideo) socket.emit(\"pause_all_videos\", {playVideo: false} )\n                            else if(!playVideo) socket.emit(\"play_all_videos\", {playVideo: true})\n                        }}\n                    >\n                        {playVideo ? \n                            <Pause className=\"pause-icon icon\"/>:\n                            <PlayArrow className=\"play-icon icon\"/>\n                        }\n                    </Box>\n                    <VideoSeekSlider\n                        max={videoDuration}\n                        currentTime={secondsElapsed}\n                        progress={400}\n                        onChange={(time)=>{\n                            // setIsSeeking(true);\n                            handleSeekChange(time);\n                        }}\n                        offset={0}\n                        secondsPrefix=\"00:00:\"\n                        minutesPrefix=\"00:\"\n                    />\n\n                    <Box className=\"video-timestamp\">{formatTime(secondsElapsed) + \" / \" + formatTime(videoDuration)}</Box>\n                    <Fullscreen className=\"icon\" onClick={handleClickFullscreen}/>\n                </Box>\n\n        </Box>\n        \n    )\n    \n};\n\nexport default ProgressBar;"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,GAAR,QAAkB,eAAlB;AACA,OAAO,oBAAP;AACA,SAASC,UAAT,EAAqBC,KAArB,EAA4BC,SAA5B,QAA6C,qBAA7C;AACA,SAAQC,eAAR,QAA8B,4BAA9B;AACA,OAAO,oBAAP;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,OAAO,oCAAP;AACA,SAASC,gBAAT,QAAiC,6BAAjC;;;AAEA,MAAMC,WAAW,GAAG,MAAM;EAAA;;EAEtB,MAAMC,MAAM,GAAGF,gBAAgB,EAA/B;EAEA,MAAMG,UAAU,GAAGL,eAAe,EAAlC;EACA,MAAM;IACFM,UADE;IACUC,aADV;IACyBC,SADzB;IACoCC,WADpC;IAEFC,UAFE;IAEUC,qBAFV;IAEiCC,gBAFjC;IAGFC;EAHE,IAIFR,UAAU,CAACA,UAJf;EAMA,oBACI,QAAC,GAAD;IAAK,EAAE,EAAC,cAAR;IAAA,uBAEQ,QAAC,GAAD;MAAK,SAAS,EAAC,eAAf;MAAA,wBACI,QAAC,GAAD;QACI,OAAO,EAAE,MAAM;UACXC,UAAU;UACV,IAAGE,SAAH,EAAcJ,MAAM,CAACU,IAAP,CAAY,kBAAZ,EAAgC;YAACN,SAAS,EAAE;UAAZ,CAAhC,EAAd,KACK,IAAG,CAACA,SAAJ,EAAeJ,MAAM,CAACU,IAAP,CAAY,iBAAZ,EAA+B;YAACN,SAAS,EAAE;UAAZ,CAA/B;QACvB,CALL;QAAA,UAOKA,SAAS,gBACN,QAAC,KAAD;UAAO,SAAS,EAAC;QAAjB;UAAA;UAAA;UAAA;QAAA,QADM,gBAEN,QAAC,SAAD;UAAW,SAAS,EAAC;QAArB;UAAA;UAAA;UAAA;QAAA;MATR;QAAA;QAAA;QAAA;MAAA,QADJ,eAaI,QAAC,eAAD;QACI,GAAG,EAAED,aADT;QAEI,WAAW,EAAEM,cAFjB;QAGI,QAAQ,EAAE,GAHd;QAII,QAAQ,EAAGE,IAAD,IAAQ;UACd;UACAH,gBAAgB,CAACG,IAAD,CAAhB;QACH,CAPL;QAQI,MAAM,EAAE,CARZ;QASI,aAAa,EAAC,QATlB;QAUI,aAAa,EAAC;MAVlB;QAAA;QAAA;QAAA;MAAA,QAbJ,eA0BI,QAAC,GAAD;QAAK,SAAS,EAAC,iBAAf;QAAA,UAAkCL,UAAU,CAACG,cAAD,CAAV,GAA6B,KAA7B,GAAqCH,UAAU,CAACH,aAAD;MAAjF;QAAA;QAAA;QAAA;MAAA,QA1BJ,eA2BI,QAAC,UAAD;QAAY,SAAS,EAAC,MAAtB;QAA6B,OAAO,EAAEI;MAAtC;QAAA;QAAA;QAAA;MAAA,QA3BJ;IAAA;MAAA;MAAA;MAAA;IAAA;EAFR;IAAA;IAAA;IAAA;EAAA,QADJ;AAqCH,CAhDD;;GAAMR,W;UAEaD,gB,EAEIF,e;;;KAJjBG,W;AAkDN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}